.Segmented {
  appearance: none;
  padding: 0;
  border: solid var(--border-width) var(--border-color);
  display: flex;
  border-radius: 8px;
  overflow: hidden;
  justify-items: center;
  justify-content: center;
  font-size: var(--sz-small);

  /* This works around a subpixel rendering problem in Chrome where the background can bleed through
  sometimes below the element. If that background is white, its's very obvious. This seems to always look good. */
  background-color: var(--c-neo-blue);

  &.is-disabled {
    background-color: white;
    border-color: var(--c-disabled);
    color: var(--c-disabled);

    & + svg {
      color: var(--c-disabled);
    }
  }

  &:not(:has(:focus-visible)):not(.is-disabled) {
    box-shadow: 2px 2px 0 0 var(--shadow-color);
  }

  &:has(:focus-visible) {
    outline: solid var(--outline-width) var(--c-neo-blue);
    outline-offset: var(--outline-offset);
  }
}

.Segmented__button:not(:has(:disabled)) {
  &,
  & > * {
    cursor: pointer;
  }

  &:has(:checked) {
    &,
    &:has(:checked) + * {
      border-color: var(--c-neo-blue);
    }
    background-color: var(--c-neo-blue);
    color: white;
  }
}

.Segmented__button:has(:disabled) {
  background-color: transparent;
  color: var(--c-disabled);

  &:has(:checked) {
    background-color: var(--c-disabled);
    color: white;
  }
}

.Segmented__button {
  min-height: 100%;
  &:active:not(:has(:disabled)),
  &[aria-pressed="true"] {
    filter: brightness(0.9);
  }

  background-color: white;
  padding: 0.25rem 0.75rem;
  text-align: center;
  flex: auto;
  user-select: none;

  /* leading border to separate each button */
  &:not(:first-child) {
    border-inline-start: solid var(--border-width);
    border-color: inherit;
  }

  & > input {
    position: absolute;
    clip-path: inset(50%);
    opacity: 0.01;
  }
}
