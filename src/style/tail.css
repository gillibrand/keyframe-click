@import "./range.css";
@import "tailwindcss";

@theme {
  /* TODO: this matches @media queries. Maybe change to rem */
  --breakpoint-sm: 750px;
  --shadow-hard: 2px 2px 0 0 black;
  --shadow-inset-hard: inset 1px 1px 0 0 black;
  --shadow-hard-1: 1px 1px 0 0 black;

  --color-disabled: var(--color-gray-500);
  --color-neo-orange: #ffb800;
  --color-neo-blue: #006dea;
  --color-neo-white: #f5f5f5;
  --color-danger: #ff2683;
  --color-neo-teal: #4ccdc0;
}

/* Custom focus outline style. Normally used with focus:visible */
@utility focus-outline {
  @apply outline-neo-blue outline-3 outline-offset-2;
}

@utility border-neo {
  @apply border-2 border-black;
}

/* hides element exactly at breakpoint */
@layer utilities {
  .hidden-at-small {
    @media (width < theme("breakpoint.sm")) {
      @apply hidden;
    }
  }
}

/* Buttons */
@layer components {
  .button {
    @apply text-disabled border-disabled min-w-[12ch] rounded-full border-2 px-6 py-2 leading-none text-balance select-none;
    @apply enabled:bg-neo-blue enabled:shadow-hard hover:brightness-110 enabled:border-black enabled:text-white;
    @apply active:shadow-hard-1 enabled:cursor-pointer enabled:active:brightness-95;
    @apply focus-visible:focus-outline ring-white focus-visible:ring-2;
  }

  .button.is-danger {
    @apply enabled:bg-danger;
  }

  .button.is-secondary {
    @apply hover:brightness-95 active:brightness-90 enabled:bg-white enabled:text-black;
  }
}

/* Split buttons. Use two or more next to each other in same parent w/ no other sibling for a unified look */
@layer components {
  .split-button {
    @apply bg-neo-blue inline-flex items-center justify-center px-6 py-2 leading-none text-white select-none first:rounded-s-full last:rounded-e-full;
    @apply hover:brightness-110 active:brightness-95;
    @apply enabled:cursor-pointer enabled:active:brightness-90;
    @apply shadow-hard active:shadow-hard-1;

    /* border in on start of first, but no others so that it appears between the buttons (no double border) */
    @apply border-2 border-s-0 border-black first:border-s-2;
    /* but when focus is visible we show all borders. That means the button before this hides its end border. This is so the focus ring circles the entire apparent border */
    @apply focus-visible:z-10 focus-visible:border-s-2 focus-visible:ring-2 focus-visible:outline-3 [&:has(+:focus-visible)]:border-e-0;
    @apply outline-neo-blue relative ring-white outline-offset-2;
  }
}

@layer components {
  .textbox {
    @apply border-neo shadow-inset-hard bg-white p-1 leading-none;
    @apply focus-visible:focus-outline ring-white focus-visible:ring-2;
    @apply disabled:border-disabled disabled:text-disabled disabled:bg-white/50 disabled:shadow-none;
    @apply not-[:is(:focus,:valid)]:border-danger;
  }
}

@utility scrollbar-none {
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@layer components {
  .tile {
    @apply border-neo bg-neo-white shadow-hard p-4;
  }

  /* Inspector sidebar follow visual conventions for their headers */
  .inspector {
    @apply space-y-4;

    h2 {
      @apply text-base font-bold not-first:pt-2;
    }

    h2:not(:first-child),
    hr {
      @apply border-t-1 border-gray-300;
    }

    h2:not(:first-child) {
      @apply mt-4;
    }
  }
}

@layer components {
  /* Page wrappers to center content */
  .wrapper-wide,
  .wrapper {
    /* Need width in case this is nested in a flex-col */
    @apply w-full;
    /* width: 100%; */

    @apply mx-auto px-4 sm:max-w-[1700px];
  }

  .wrapper {
    @apply max-w-[80ch];
  }
}

/*
Pairs labels with controls in a consistent label. Generally wrap the entire section in a <label> and
the text portion in a <span> like: <label><span>My Label</span> <input></label>
*/
@layer components {
  .stacked-label {
    @apply grid items-center gap-2 text-sm;
  }

  .block-label {
    @apply flex items-center;
  }

  .stacked-label,
  .stacked-label {
    > span {
      @apply text-gray-700 select-none;
    }
  }
}

@layer components {
  /* normally a 2 col grid row on desktop. But on mobile we expand each col to full width and scroll
  snap between them as two different panes. */
  .inspector-sidebar {
    @apply grid grid-cols-[1fr_18rem] gap-4 py-4;

    & > * {
      @apply snap-start;
    }

    @media (width < 750px) {
      @apply -mx-4 grid-cols-[100%_100%] gap-6 px-4;

      @apply my-0 ps-4 pb-[8px];
      @apply scrollbar-none snap-x snap-mandatory scroll-p-4 overflow-x-scroll overflow-y-hidden scroll-smooth;
    }
  }
}

@layer base {
  body {
    @apply bg-neo-orange text-gray-700;
  }

  /* Gray several controls when a dialog is open */
  .is-dialog-open #root :where(button, label, [data-component="RadioTab"], .DemoTile) {
    filter: grayscale(0.75);
  }

  /* XXX: this feels too general */
  .j-prose code,
  kbd {
    @apply border-1 border-black/10;
    @apply rounded-sm bg-black/5 px-1 py-0.5;
    @apply font-mono;

    /* invert colors of help in a "dark area" like the popup help dialog */
    .dark-area & {
      @apply border-white/50 bg-white/30;
    }
  }

  /* Recenter dialogs that Tailwind un-sets */
  dialog {
    @apply fixed inset-0 m-auto;
  }

  /* for use in .mdx content. Like Tailwind Typography plugin */
  .j-prose {
    h1,
    h2,
    h3 {
      @apply font-bold;
    }

    h1 {
      @apply text-3xl;
    }

    h2 {
      @apply text-2xl;
    }

    h3 {
      @apply text-lg;
    }

    a {
      @apply underline decoration-2;
    }

    ol {
      @apply list-decimal;
    }

    ul {
      @apply list-[square];
    }

    ul,
    ol {
      @apply ps-10;
    }

    p,
    li {
      @apply text-pretty;
    }
  }
}
