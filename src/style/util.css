.stack-large > * + * {
  margin-block-start: 1.75rem;
}

/** Basic layout util of stack the contents with consistent spacing. Note that a child can opt out
 * of this if it's mt-0, usually for animation purposes.*/
.stack > :where(* + *) {
  margin-block-start: 1.125rem;

  @media (width < 750px) {
    margin-block-start: 1rem;
  }
}

.stack-small > * + * {
  margin-block-start: 0.5rem;
}

/**
 * Usually a stack just has space between the children. If you add this, the last item gets padding
 * below too. That's needed full height pages there the padding on the page will not be scrolled
 * into view if it overflow, so we need padding on the last layout item to add that space. Still
 * using this instead of margin on top and bottom to ensure it works even when margin collapse is
 * prevented, plus margins will NOT be scrolled to in an overflow of the page.
 */
.stack--trail > *:last-child {
  padding-block-end: 1.125rem;
}

.col-2 {
  display: grid;
  grid-template-columns: 1fr 1fr;
}

.col-2-auto {
  display: flex;

  & > *:not(.flex-none) {
    flex-grow: 1;
  }
}

.mt-stack {
  margin-block-start: 1.125rem;
}

.mt-0 {
  /* TODO: can I lose this yet? */
  margin-block-start: 0 !important;
}

.mt-neg-4\:lg {
  @media (width >= 750px) {
    margin-block-start: -1rem;
  }
}

.mb-stack,
.mb-1\.5 {
  margin-block-end: 1.125rem;
}

.mb-stack\:lg {
  @media (width >= 750px) {
    margin-block-start: 1.125rem;
  }
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}
